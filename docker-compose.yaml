version: "3.5"

services:
  api:
    build:
      context: .
      dockerfile: src/containerfile/Dockerfile
    hostname: api
    # only for testing
    environment:
      - SECRET_KEY=ryMPPY6FPXwQF3nKcwAzpr#WmrVbzDZYMA76wQtArN9Ma!m5@Zo%k
      - NAME_DB=receiver_app
      - USER_DB=admin
      - HOST_DB=db
      - PASSWORD_DB=1234
      - ALLOWED_HOSTS=*
      - PYTHONUNBUFFERED=1
      - REDIS_URI=redis://redis_db:6379
#    env_file:
#      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      redis_db:
        condition: service_healthy
      db:
        condition: service_healthy

  redis_db:
    image: redis:7.2-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 5

  db:
    image: postgres:15
    hostname: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=admin
      - POSTGRES_DB=receiver_app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d receiver_app"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: